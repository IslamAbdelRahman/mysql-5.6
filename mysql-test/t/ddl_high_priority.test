--source include/have_innodb.inc

create user test_user1@localhost;
grant all on test to test_user1@localhost;
create user test_user2@localhost;
grant all on test to test_user2@localhost;

connect (con1,localhost,test_user1,,test,,);
connect (con2,localhost,test_user2,,test,,);

connection default;
set lock_wait_timeout = 2;

--disable_warnings
drop table if exists t1, t1_new;
--enable_warnings

create table t1 (i int) engine=InnoDB;
insert into t1 values (1), (2), (3);

##
## killing conflicting shared locks by alter table
##

--echo connection: con1
connection con1;
lock tables t1 read;

--echo connection: default
connection default;

describe t1;

# both con1 and con2 exist
--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

select @@high_priority_ddl;

# ddl will fail without high_priority_ddl
--error ER_LOCK_WAIT_TIMEOUT
alter table t1 modify i bigint;

set high_priority_ddl = 1;
select @@high_priority_ddl;

# non-ddl command will timeout
--error ER_LOCK_WAIT_TIMEOUT
lock tables t1 write;

# ddl command will kill con1
alter table t1 modify i bigint;

describe t1;

# con1 is killed
--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

select i from t1;

##
## killing conflicting shared lock in a transaction
## transaction will rollback
##

--echo connection: con2
connection con2;
begin;
  insert into t1 values (4);
  select i from t1;

--echo connection: default
connection default;

describe t1;

# con2 in the processlist
--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

alter table t1 rename t1_new;

describe t1_new;

# con2 is killed
--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

select i from t1_new;

##
## simulate conflicting DDL which will not be killed
##

# re-establish con1
disconnect con1;
connect (con1,localhost,test_user1,,test,,);
--echo connection: con1
connection con1;
# Simulate conflicting DDL
# This will hold MDL_SHARED_NO_READ_WRITE, which may be upgraded to exclusive
# locks to run DDLs like ALTER TABLE
lock tables t1_new write;

--echo connection: default
connection default;

# this will timeout
--error ER_LOCK_WAIT_TIMEOUT
drop table t1_new;

# con1 still exists
--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

##
## killing conflicting transaction by drop table DDL
##

--echo connection: con1
connection con1;
unlock tables;
lock tables t1_new read;
begin;
  insert into t1_new values (4);

--echo connection: default
connection default;

describe t1_new;
select i from t1_new;

--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

# drop table will go through
drop table t1_new;

--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

##
## no effect for regular users
##

disconnect con1;
disconnect con2;
connect (con1,localhost,test_user1,,test,,);
connect (con2,localhost,test_user1,,test,,);

create table t1 (i int) engine=InnoDB;
insert into t1 values (1), (2), (3);

--echo connection: con1
connection con1;
lock tables t1 read;

--echo connection: con2
connection con2;
set lock_wait_timeout = 2;

describe t1;

# both con1 and con2 exist
--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

set high_priority_ddl = 1;
select @@high_priority_ddl;

# regular user ddl will fail regardless of high_priority_ddl being on
--error ER_LOCK_WAIT_TIMEOUT
alter table t1 modify i bigint;

describe t1;

# both con1 and con2 still exist
--replace_column 1 <Id> 3 <Host> 5 <Command> 6 <Time> 7 <State> 8 <Info> 9 <RExam> 10 <RSent> 11 <TID>
show processlist;

##
## clean up
##

connection default;
drop table t1;
disconnect con1;
disconnect con2;
drop user test_user1@localhost;
drop user test_user2@localhost;
