"================== con1 connected =================="
select "MARKER_BEGIN" as marker;
marker
MARKER_BEGIN
select "This is simple statement one" as payload;
payload
This is simple statement one
select "This is simple statement two" as payload;
payload
This is simple statement two
select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload;
$$
payload
This is the first part of a multi query
payload
And this is the second part of a multi query
payload
With a third part to make things complete
select "MARKER_END" as marker;
marker
MARKER_END
select "Con1 is done with payload" as status;
status
Con1 is done with payload
"================== con1 done =================="
set @con1_tid = (select thread_id from performance_schema.threads
where processlist_user = 'user1');
select (@con1_tid is not null) as expected;
expected
1
set @marker_begin = (select event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_BEGIN%" and thread_id = @con1_tid);
select (@marker_begin is not null) as expected;
expected
1
set @marker_end = (select end_event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_END%" and thread_id = @con1_tid);
select (@marker_end is not null) as expected;
expected
1
show status like "performance_schema%";
Variable_name	Value
Performance_schema_accounts_lost	0
Performance_schema_cond_classes_lost	0
Performance_schema_cond_instances_lost	0
Performance_schema_digest_lost	0
Performance_schema_file_classes_lost	0
Performance_schema_file_handles_lost	0
Performance_schema_file_instances_lost	0
Performance_schema_hosts_lost	0
Performance_schema_locker_lost	0
Performance_schema_mutex_classes_lost	0
Performance_schema_mutex_instances_lost	0
Performance_schema_rwlock_classes_lost	0
Performance_schema_rwlock_instances_lost	0
Performance_schema_session_connect_attrs_lost	0
Performance_schema_socket_classes_lost	0
Performance_schema_socket_instances_lost	0
Performance_schema_stage_classes_lost	0
Performance_schema_statement_classes_lost	0
Performance_schema_table_handles_lost	0
Performance_schema_table_instances_lost	0
Performance_schema_thread_classes_lost	0
Performance_schema_thread_instances_lost	0
Performance_schema_users_lost	0
select * from (
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
sql_text as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_statements_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
"(stage)" as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_stages_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
operation as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_waits_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
) all_events
order by relative_event_id asc;
relative_event_id	relative_end_event_id	event_name	comment	nesting_event_type	relative_nesting_event_id
0	18	statement/sql/select	select "MARKER_BEGIN" as marker	NULL	NULL
1	2	stage/sql/init	(stage)	STATEMENT	0
2	2	wait/io/socket/sql/client_connection	recv	STAGE	1
3	6	stage/sql/init	(stage)	STATEMENT	0
4	4	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	3
5	5	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	3
6	6	wait/io/file/sql/query_log	write	STAGE	3
7	7	stage/sql/checking permissions	(stage)	STATEMENT	0
8	8	stage/sql/Opening tables	(stage)	STATEMENT	0
9	9	stage/sql/init	(stage)	STATEMENT	0
10	10	stage/sql/optimizing	(stage)	STATEMENT	0
11	11	stage/sql/executing	(stage)	STATEMENT	0
12	12	stage/sql/end	(stage)	STATEMENT	0
13	13	stage/sql/query end	(stage)	STATEMENT	0
14	14	stage/sql/closing tables	(stage)	STATEMENT	0
15	16	stage/sql/freeing items	(stage)	STATEMENT	0
16	16	wait/io/socket/sql/client_connection	send	STAGE	15
17	18	stage/sql/cleaning up	(stage)	STATEMENT	0
18	18	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	17
19	19	idle	idle	NULL	NULL
20	38	statement/sql/select	select "This is simple statement one" as payload	NULL	NULL
21	22	stage/sql/init	(stage)	STATEMENT	20
22	22	wait/io/socket/sql/client_connection	recv	STAGE	21
23	26	stage/sql/init	(stage)	STATEMENT	20
24	24	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	23
25	25	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	23
26	26	wait/io/file/sql/query_log	write	STAGE	23
27	27	stage/sql/checking permissions	(stage)	STATEMENT	20
28	28	stage/sql/Opening tables	(stage)	STATEMENT	20
29	29	stage/sql/init	(stage)	STATEMENT	20
30	30	stage/sql/optimizing	(stage)	STATEMENT	20
31	31	stage/sql/executing	(stage)	STATEMENT	20
32	32	stage/sql/end	(stage)	STATEMENT	20
33	33	stage/sql/query end	(stage)	STATEMENT	20
34	34	stage/sql/closing tables	(stage)	STATEMENT	20
35	36	stage/sql/freeing items	(stage)	STATEMENT	20
36	36	wait/io/socket/sql/client_connection	send	STAGE	35
37	38	stage/sql/cleaning up	(stage)	STATEMENT	20
38	38	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	37
39	39	idle	idle	NULL	NULL
40	58	statement/sql/select	select "This is simple statement two" as payload	NULL	NULL
41	42	stage/sql/init	(stage)	STATEMENT	40
42	42	wait/io/socket/sql/client_connection	recv	STAGE	41
43	46	stage/sql/init	(stage)	STATEMENT	40
44	44	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	43
45	45	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	43
46	46	wait/io/file/sql/query_log	write	STAGE	43
47	47	stage/sql/checking permissions	(stage)	STATEMENT	40
48	48	stage/sql/Opening tables	(stage)	STATEMENT	40
49	49	stage/sql/init	(stage)	STATEMENT	40
50	50	stage/sql/optimizing	(stage)	STATEMENT	40
51	51	stage/sql/executing	(stage)	STATEMENT	40
52	52	stage/sql/end	(stage)	STATEMENT	40
53	53	stage/sql/query end	(stage)	STATEMENT	40
54	54	stage/sql/closing tables	(stage)	STATEMENT	40
55	56	stage/sql/freeing items	(stage)	STATEMENT	40
56	56	wait/io/socket/sql/client_connection	send	STAGE	55
57	58	stage/sql/cleaning up	(stage)	STATEMENT	40
58	58	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	57
59	59	idle	idle	NULL	NULL
60	76	statement/sql/select	select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
61	62	stage/sql/init	(stage)	STATEMENT	60
62	62	wait/io/socket/sql/client_connection	recv	STAGE	61
63	66	stage/sql/init	(stage)	STATEMENT	60
64	64	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	63
65	65	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	63
66	66	wait/io/file/sql/query_log	write	STAGE	63
67	67	stage/sql/checking permissions	(stage)	STATEMENT	60
68	68	stage/sql/Opening tables	(stage)	STATEMENT	60
69	69	stage/sql/init	(stage)	STATEMENT	60
70	70	stage/sql/optimizing	(stage)	STATEMENT	60
71	71	stage/sql/executing	(stage)	STATEMENT	60
72	72	stage/sql/end	(stage)	STATEMENT	60
73	73	stage/sql/query end	(stage)	STATEMENT	60
74	74	stage/sql/closing tables	(stage)	STATEMENT	60
75	76	stage/sql/freeing items	(stage)	STATEMENT	60
76	76	wait/io/socket/sql/client_connection	send	STAGE	75
77	90	statement/sql/select	select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
78	80	stage/sql/init	(stage)	STATEMENT	77
79	79	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	78
80	80	wait/io/file/sql/query_log	write	STAGE	78
81	81	stage/sql/checking permissions	(stage)	STATEMENT	77
82	82	stage/sql/Opening tables	(stage)	STATEMENT	77
83	83	stage/sql/init	(stage)	STATEMENT	77
84	84	stage/sql/optimizing	(stage)	STATEMENT	77
85	85	stage/sql/executing	(stage)	STATEMENT	77
86	86	stage/sql/end	(stage)	STATEMENT	77
87	87	stage/sql/query end	(stage)	STATEMENT	77
88	88	stage/sql/closing tables	(stage)	STATEMENT	77
89	90	stage/sql/freeing items	(stage)	STATEMENT	77
90	90	wait/io/socket/sql/client_connection	send	STAGE	89
91	106	statement/sql/select	select "With a third part to make things complete" as payload	NULL	NULL
92	94	stage/sql/init	(stage)	STATEMENT	91
93	93	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	92
94	94	wait/io/file/sql/query_log	write	STAGE	92
95	95	stage/sql/checking permissions	(stage)	STATEMENT	91
96	96	stage/sql/Opening tables	(stage)	STATEMENT	91
97	97	stage/sql/init	(stage)	STATEMENT	91
98	98	stage/sql/optimizing	(stage)	STATEMENT	91
99	99	stage/sql/executing	(stage)	STATEMENT	91
100	100	stage/sql/end	(stage)	STATEMENT	91
101	101	stage/sql/query end	(stage)	STATEMENT	91
102	102	stage/sql/closing tables	(stage)	STATEMENT	91
103	104	stage/sql/freeing items	(stage)	STATEMENT	91
104	104	wait/io/socket/sql/client_connection	send	STAGE	103
105	106	stage/sql/cleaning up	(stage)	STATEMENT	91
106	106	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	105
107	107	idle	idle	NULL	NULL
108	126	statement/sql/select	select "MARKER_END" as marker	NULL	NULL
109	110	stage/sql/init	(stage)	STATEMENT	108
110	110	wait/io/socket/sql/client_connection	recv	STAGE	109
111	114	stage/sql/init	(stage)	STATEMENT	108
112	112	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	111
113	113	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	111
114	114	wait/io/file/sql/query_log	write	STAGE	111
115	115	stage/sql/checking permissions	(stage)	STATEMENT	108
116	116	stage/sql/Opening tables	(stage)	STATEMENT	108
117	117	stage/sql/init	(stage)	STATEMENT	108
118	118	stage/sql/optimizing	(stage)	STATEMENT	108
119	119	stage/sql/executing	(stage)	STATEMENT	108
120	120	stage/sql/end	(stage)	STATEMENT	108
121	121	stage/sql/query end	(stage)	STATEMENT	108
122	122	stage/sql/closing tables	(stage)	STATEMENT	108
123	124	stage/sql/freeing items	(stage)	STATEMENT	108
124	124	wait/io/socket/sql/client_connection	send	STAGE	123
125	126	stage/sql/cleaning up	(stage)	STATEMENT	108
126	126	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	125
